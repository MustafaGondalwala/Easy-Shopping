{"version":3,"sources":["Chatbot/styles.module.css","Chatbot/Card/styles.module.css","assets/images/cute-boy.png","Chatbot/Message/styles.module.css","Chatbot/PopUp/PopConfirm/styles.module.css","Chatbot/QuickReplies/styles.module.css","assets/images/user.svg","Chatbot/QuickReply/styles.module.css","assets/images/cute-bot.png","serviceWorker.js","redux/constants/src/event-type.js","redux/action/eventAction.js","Chatbot/Message/index.js","Chatbot/Card/index.js","Chatbot/QuickReply/index.js","Chatbot/QuickReplies/index.js","Chatbot/PopUp/PopConfirm/index.js","Chatbot/PopUp/index.js","Chatbot/index.js","redux/reducer/event-reducer/index.js","redux/saga.js","redux/root-saga.js","redux/store.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","EventType","fetchEventQuerySucess","payload","type","Message","props","className","styles","card","speaks","avtarBot","src","Bot","alt","style","height","width","botReply","text","User","avtarUser","userReply","Card","onclick","event","preventDefault","stopPropagation","replyClick","target","value","cards","avtarBots","upperCard","cardStyle","this","imageUri","innerDiv","title","fontSize","subtitle","buttons","map","i","buttonStyle","key","onClick","React","Component","QuickReply","reply","quickReply","click","QuickReplies","_handleClick","bind","cardss","marginLeft","id","marginRight","renderQuickReplies","quickReplies","renderQuickReply","PopConfirm","popup","popup_inner","color","text2","closePopup","closeButton","arrow","PopUp","state","showPopup","setState","togglePopup","Chatbot","_handleQuickReplyPayload","_handleInputKeyPress","hide","show","clientToken","loading","messages","regenerateToken","showBot","showPopUp","botmsg","fetchEventQueryStart","messagesEnd","scrollIntoView","behavior","talkInput","focus","df_text_query","x","Promise","resolve","setTimeout","chatWindow","botHeader","CloseCircleOutlined","hideIcon","messageArea","renderMessages","renderMessagesText","ref","el","float","clear","inputDiv","inputField","input","placeholder","onKeyPress","SendOutlined","arrowInput","href","cuteBot","queryText","headers","Authorization","says","msg","df_client_call","request","config","axios","post","textInput","sessionId","response","data","status","that","message","uuidv4","renderOneMessage","e","stateMessage","connect","botmsg2","dispatch","initialState","isFetching","error","reducer","action","fetchEventAsync","fetchEventQuery","bodyParameters","eventInput","result","put","take","call","rootSaga","all","sagaMiddleware","createSagaMiddleware","middleware","logger","store","createStore","applyMiddleware","run","rootEl","document","getElementById","console","log","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.422d2d51.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatWindow\":\"styles_chatWindow__TMwGT\",\"chatWidget\":\"styles_chatWidget__3DU8y\",\"cuteBot\":\"styles_cuteBot__2y23o\",\"inputField\":\"styles_inputField__36Kv5\",\"arrowInput\":\"styles_arrowInput__3q9Zf\",\"hideIcon\":\"styles_hideIcon__14Qpd\",\"botHeader\":\"styles_botHeader__2MAte\",\"messageArea\":\"styles_messageArea__16Ixc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardStyle\":\"styles_cardStyle__t96s6\",\"buttonStyle\":\"styles_buttonStyle__3DjpN\",\"upperCard\":\"styles_upperCard__U42_H\",\"innerDiv\":\"styles_innerDiv__3dD1n\",\"cards\":\"styles_cards__2PhhV\",\"avtarBots\":\"styles_avtarBots__gxzTq\"};","module.exports = __webpack_public_path__ + \"static/media/cute-boy.8cd22de0.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__2fbo7\",\"avtarBot\":\"styles_avtarBot__3XDLf\",\"botReply\":\"styles_botReply__2vPci\",\"userReply\":\"styles_userReply__1k_xa\",\"avtarUser\":\"styles_avtarUser__3QKyk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"styles_popup__hccZc\",\"popup_inner\":\"styles_popup_inner__zFNLZ\",\"closeButton\":\"styles_closeButton__1gVsi\",\"closeButtonhover\":\"styles_closeButtonhover__1SBvn\",\"arrow\":\"styles_arrow__1wE2d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__5BQtS\",\"avtarBot\":\"styles_avtarBot__TfzpH\",\"botReply\":\"styles_botReply__93uOo\"};","module.exports = __webpack_public_path__ + \"static/media/user.316d47a9.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quickReply\":\"styles_quickReply__2424H\"};","module.exports = __webpack_public_path__ + \"static/media/cute-bot.f1a00bd1.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\n\n\n/**\n * This file is part of the U-Centric project.\n *\n * (c) U-Centric Development Team <dev@ucentric.sisgroup.sg>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Ajeet Singh <ajeet.singh@sisgroup.sg>\n */\n\n export const EventType =  {\n    FetchEventStart : 'FETCH_EVENT_START',\n    FetchEventSuccess : 'FETCH_EVENT_SUCCESS',\n    FetchEventFailure : 'FETCH_EVENT_FAILURE', \n}\n\n\n// export const FetchEventStart= 'FETCH_EVENT_START';\n// export const FetchEventSuccess = 'FETCH_EVENT_SUCCESS';\n// export const FetchEventFailure = 'FETCH_EVENT_FAILURE';","\n\nimport { EventType } from '../constants/src/event-type';\n\n\nexport const fetchEventQueryStart = () => ({\n\n    type: EventType.FetchEventStart,\n\n\n});\n\nexport const fetchEventQuerySucess = (payload) => ({\n    type: EventType.FetchEventSuccess,\n    payload\n});\nexport const fetchEventQueryFailure = (error) => ({\n    type: EventType.FetchEventSuccess,\n    error\n})\n","/**\n * This file is part of the U-Centric project.\n *\n * (c) U-Centric Development Team <dev@ucentric.sisgroup.sg>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author AJEET SINGH <ajeet.singh@sisgroup.sg>\n */\n\nimport React from 'react';\n\nimport Bot from '../../assets/images/cute-boy.png';\nimport User from '../../assets/images/user.svg';\n\nimport styles from './styles.module.css';\n\nconst Message = (props) => {\n  return (\n    <div>\n      <div className={styles.card}>\n        <div>\n          {props.speaks === 'bot' && (\n            <div>\n              <div className={styles.avtarBot} ><img src={Bot} alt=\"Bot\" style={{ height: '50px', width: 'auto' }} /></div>\n              <div className={styles.botReply}><p>{props.text}</p></div>\n            </div>\n          )}\n          {props.speaks === 'me' && (\n            <div>\n              <div><img src={User} alt=\"User\" className={styles.avtarUser} /></div>\n              <div className={styles.userReply}><p>{props.text}</p></div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Message;\n\n\n\n\n\n\n\n\n\n","/**\n * This file is part of the U-Centric project.\n *\n * (c) U-Centric Development Team <dev@ucentric.sisgroup.sg>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author AJEET SINGH <ajeet.singh@sisgroup.sg>\n */\n\nimport React from 'react';\nimport Bot from '../../assets/images/cute-boy.png';\nimport styles from './styles.module.css';\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n   render() {\n    return (\n      <div>\n        <div className={styles.cards}>\n          <div>\n            <div className={styles.avtarBots} ><img src={Bot} alt=\"Bot\" style={{ height: '50px', width: 'auto' }} /></div>\n            <div className={styles.upperCard}>\n              <div className={styles.cardStyle}>\n                <div >\n                  <img src={this.props.payload.imageUri} alt=\"cardImage\" height=\"150px\" width=\"100%\" />\n                </div>\n                <div className={styles.innerDiv}>\n                  <div>\n                    <p> {this.props.payload.title}</p>\n                    <p style={{ fontSize: '13px' }}>{this.props.payload.subtitle}</p>\n                  </div>\n                  <div>\n                    {this.props.payload.buttons.map((card, i) => <button className={styles.buttonStyle} key={i} value={card.text} type=\"button\" onClick={this.onclick}>{card.text}</button>)\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n   onclick = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.props.replyClick(event, event.target.value);\n  }\n};\n\nexport default Card;\n","/**\n * This file is part of the U-Centric project.\n *\n * (c) U-Centric Development Team <dev@ucentric.sisgroup.sg>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author AJEET SINGH <ajeet.singh@sisgroup.sg>\n */\n\nimport React from 'react';\nimport styles from './styles.module.css';\n\nconst QuickReply = (props) => {\n    if (props.reply) {\n        return (\n            <button className={styles.quickReply}\n                onClick={(event) =>\n                    props.click(\n                        event,\n                        props.reply\n                    )\n                }>\n                {props.reply}\n            </button>\n        );\n    } else {\n        return null\n    }\n};\n\nexport default QuickReply;\n\n\n\n","/**\n * This file is part of the U-Centric project.\n *\n * (c) U-Centric Development Team <dev@ucentric.sisgroup.sg>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author AJEET SINGH <ajeet.singh@sisgroup.sg>\n */\n\nimport React, { Component } from 'react';\nimport QuickReply from '../QuickReply';\nimport Bot from '../../assets/images/cute-boy.png';\n\nimport styles from './styles.module.css';\n\nclass QuickReplies extends Component {\n    constructor(props) {\n        super(props);\n        this._handleClick = this._handleClick.bind(this);\n    }\n     render() {\n        return (\n            <div>\n                <div className={styles.cardss}>\n                    <div className={styles.avtarBot} ><img src={Bot} alt=\"Bot\" style={{ height: '50px', width: 'auto', marginLeft: '12px' }} /></div>\n                    <div id=\"quick-replies\" style={{ marginLeft: '27px', marginRight: '27px' }}>\n                        {this.props.title && <div>\n                            <div className={styles.botReply}><div>{this.props.title}</div></div>\n                        </div>\n                        }\n                        {this.renderQuickReplies(this.props.payload)}\n                    </div>\n                </div >\n            </div>\n        );\n    }\n     _handleClick(event, text) {\n        this.props.replyClick(event, text);\n    }\n     renderQuickReply(reply, i) {\n        return <QuickReply key={i} click={this._handleClick} reply={reply} />;\n    }\n     renderQuickReplies(quickReplies) {\n        if (quickReplies) {\n            return quickReplies.map((reply, i) => {\n                if (reply.text) {\n                    return this.renderQuickReply(reply.text, i);\n                }\n                return this.renderQuickReply(reply, i);\n            }\n            )\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default QuickReplies;\n\n\n","/**\n * This file is part of the U-Centric project.\n *\n * (c) U-Centric Development Team <dev@ucentric.sisgroup.sg>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author AJEET SINGH <ajeet.singh@sisgroup.sg>\n */\n\n\nimport React from 'react';\n\nimport styles from './styles.module.css';\n\n\nclass PopConfirm extends React.Component {\n     render() {\n        return (\n            <div className={styles.popup}>\n                <div className={styles.popup_inner}>\n                    <h3 style={{ color: '#fff' }}>{this.props.text}</h3>\n                    <p style={{ color: '#fff' }}>{this.props.text2}</p>\n                    <button onClick={this.props.closePopup} className={styles.closeButton}>X</button>\n                    <span className={styles.arrow} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PopConfirm;\n\n\n\n\n\n\n\n","/**\n * This file is part of the U-Centric project.\n *\n * (c) U-Centric Development Team <dev@ucentric.sisgroup.sg>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author AJEET SINGH <ajeet.singh@sisgroup.sg>\n */\n\n\nimport React from 'react';\n\nimport PopConfirm from './PopConfirm';\n\nclass PopUp extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tshowPopup: false\n\t\t};\n\t}\n\ttogglePopup() {\n\t\tthis.setState({\n\t\t\tshowPopup: !this.state.showPopup\n\t\t});\n\t}\n\tcomponentDidMount() {\n\t\tthis.setState({ showPopup: true });\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className='app'>\n\t\t\t\t{this.state.showPopup ?\n\t\t\t\t\t<PopConfirm\n\t\t\t\t\t\ttext='Ask me!'\n\t\t\t\t\t\ttext2=\"I'm here to help you.\"\n\t\t\t\t\t\tclosePopup={this.togglePopup.bind(this)}\n\t\t\t\t\t/>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default PopUp;\n\n\n\n\n","/**\n * This file is part of the U-Centric project.\n *\n * (c) U-Centric Development Team <dev@ucentric.sisgroup.sg>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author AJEET SINGH <ajeet.singh@sisgroup.sg>\n */\n\nimport React, { Component } from 'react';\nimport { SendOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport axios from 'axios'\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { fetchEventQueryStart } from '../redux/action/eventAction';\n\nimport Message from './Message';\nimport Card from './Card';\nimport QuickReplies from './QuickReplies';\nimport PopUp from './PopUp';\n\nimport styles from './styles.module.css';\nimport cuteBot from '../assets/images/cute-bot.png';\n\nclass Chatbot extends Component {\n  messagesEnd;\n  constructor(props) {\n    super(props);\n    this._handleQuickReplyPayload = this._handleQuickReplyPayload.bind(this);\n    this._handleInputKeyPress = this._handleInputKeyPress.bind(this);\n\n    this.hide = this.hide.bind(this);\n    this.show = this.show.bind(this);\n\n    this.state = {\n      clientToken: false,\n      loading: false,\n      messages: [],\n      regenerateToken: 0,\n      showBot: false,\n      showPopUp: true,\n    };\n  }\n\n  df_event_chat_query_state() {\n    this.setState({ messages: [...this.state.messages, this.props.botmsg] });\n  }\n  async componentDidMount() {\n    const { fetchEventQueryStart } = this.props;\n    fetchEventQueryStart();\n  }\n  componentDidUpdate() {\n    this.messagesEnd.scrollIntoView({ behavior: 'smooth' });\n    if (this.talkInput) {\n      this.talkInput.focus();\n    }\n  }\n  _handleQuickReplyPayload(event, text) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.df_text_query(text);\n\n  }\n  renderCards(cards) {\n    return <Card payload={cards} />;\n  }\n  resolveAfterXSeconds(x) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(x);\n      }, x * 1000);\n    })\n  }\n  render() {\n    if (this.state.showBot) {\n      return (\n            <div className={styles.chatWindow}>\n              <div className={styles.botHeader}>\n                <span style={{ fontSize: '28px' }}>U Bot</span>\n                {/* <Icon type=\"close\" className={styles.hideIcon} onClick={this.hide} /> */}\n                <CloseCircleOutlined className={styles.hideIcon} onClick={this.hide}/>\n              </div>\n              <div id=\"chatbot\" className={styles.messageArea}>\n                {this.renderMessages()\n                }\n                {\n                  this.renderMessagesText(this.state.messages)\n                }\n                < div\n                  ref={(el) => {\n                    this.messagesEnd = el;\n                  }}\n                  style={{ float: 'left', clear: 'both' }}\n                />\n              </div>\n              <div className={styles.inputDiv}>\n                <input\n                  className={styles.inputField}\n                  ref={(input) => {\n                    this.talkInput = input;\n                  }}\n                  placeholder=\"Type your message here...\"\n                  onKeyPress={this._handleInputKeyPress}\n                  id=\"user_says\"\n                  type=\"text\"\n                />\n                {/* <Icon type=\"arrow-right\" className={styles.arrowInput} /> */}\n                <SendOutlined className={styles.arrowInput} />\n              </div >\n            </div >\n      );\n    } else {\n      return (\n        <div>\n          <div>\n            <a href=\"/\" onClick={this.show}>\n              <img src={cuteBot} alt=\"cute-bot\" className={styles.cuteBot} />\n            </a>\n            {this.state.showPopUp ? <PopUp /> : null}\n          </div>\n          <div\n            ref={(el) => {\n              this.messagesEnd = el;\n            }}\n            style={{ float: 'left', clear: 'both' }}\n          />\n        </div>\n      );\n    }\n  }\n   async df_text_query(queryText) {\n    const token =\n      \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1NjkzMDU2MDAsInJvbGVzIjpbIlJPTEVfVVNFUiIsIlJPTEVfU1VQRVJfQURNSU4iXSwidXNlcm5hbWUiOiJTdXBlckFkbWluIiwiZXhwIjoxODg0OTI0ODAwLCJzdWIiOiIxIiwidHdvRmFjdG9yQXV0aGVudGljYXRpb25TdGF0dXMiOm51bGx9.aWv6r0CLHQ9qVJlad2XRpxFM69p8cWl5QftQMRqwTtl92sAMaXikbYcs1xS5vbEM5TuupTa87SttvibNTSKinPC_nUu25J4LMuou8HIWH2i8cje-TPQsLjQ68RltF3GCeHBsBu7G6w7IBBar5zAtp8hAuuTs2uE3Orm3z_Sq4i7_C3SNtRldCkkLgAyJy31oKhUtBsxDxBejN2lSIHevufR9qleQ3k7DflI731c8f7JbbeVsT8f2t3oQthyz7a2PU-wOu_5UiA7bejB73eUJv_hLHXPeVMW8vrmWcL6uqaOl1Q8mmhwkzgo1FjeQ6BPXiddXG0yg9dUC6wllG892x13WcT0JhVosa-0g9oVSjyVJttshV0z7e_B0SPlHE0US6fQ_q9hwiiEy9iKAw1bzUGTYTv_9kofHnB2Z48AacrcI7ukXnCYuHsuroVUmbeJz6FhlUkEOMVwI6ekLzE1FG7gSB15YTRN44rXFXQ0rKJCCeJNs-pqphFnisDJvMCsFNKyezhZHQQy_l-dR5mCKOIOMpaSeiu7wUE1fMNDqdcod6NFbFFzsdnCRwxo2Kux9l0etKWHQg8D0vV4gTE18auf3MMEnQg8ljomPdY8m77aZvOz-UI6k9H6K3P-B44xTkksK_duJl7XgeGMydgeDNKh7hMkrFYE12IemJyUIipw\";\n\n    const config = {\n      headers: { Authorization: `Bearer ${token}` }\n    };\n\n    let says = {\n      speaks: \"me\",\n      msg: {\n        text: {\n          text: queryText\n        }\n      }\n    };\n    this.setState({ messages: [...this.state.messages, says] });\n    await this.df_client_call(says);\n  }\n  async df_client_call(request) {\n    try {\n      const token =\n        \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1NjkzMDU2MDAsInJvbGVzIjpbIlJPTEVfVVNFUiIsIlJPTEVfU1VQRVJfQURNSU4iXSwidXNlcm5hbWUiOiJTdXBlckFkbWluIiwiZXhwIjoxODg0OTI0ODAwLCJzdWIiOiIxIiwidHdvRmFjdG9yQXV0aGVudGljYXRpb25TdGF0dXMiOm51bGx9.aWv6r0CLHQ9qVJlad2XRpxFM69p8cWl5QftQMRqwTtl92sAMaXikbYcs1xS5vbEM5TuupTa87SttvibNTSKinPC_nUu25J4LMuou8HIWH2i8cje-TPQsLjQ68RltF3GCeHBsBu7G6w7IBBar5zAtp8hAuuTs2uE3Orm3z_Sq4i7_C3SNtRldCkkLgAyJy31oKhUtBsxDxBejN2lSIHevufR9qleQ3k7DflI731c8f7JbbeVsT8f2t3oQthyz7a2PU-wOu_5UiA7bejB73eUJv_hLHXPeVMW8vrmWcL6uqaOl1Q8mmhwkzgo1FjeQ6BPXiddXG0yg9dUC6wllG892x13WcT0JhVosa-0g9oVSjyVJttshV0z7e_B0SPlHE0US6fQ_q9hwiiEy9iKAw1bzUGTYTv_9kofHnB2Z48AacrcI7ukXnCYuHsuroVUmbeJz6FhlUkEOMVwI6ekLzE1FG7gSB15YTRN44rXFXQ0rKJCCeJNs-pqphFnisDJvMCsFNKyezhZHQQy_l-dR5mCKOIOMpaSeiu7wUE1fMNDqdcod6NFbFFzsdnCRwxo2Kux9l0etKWHQg8D0vV4gTE18auf3MMEnQg8ljomPdY8m77aZvOz-UI6k9H6K3P-B44xTkksK_duJl7XgeGMydgeDNKh7hMkrFYE12IemJyUIipw\";\n\n      const config = {\n        headers: { Authorization: `Bearer ${token}` }\n      };\n      let says = {};\n      const response = await axios.post(\"https://api.test.ucentric.sisgroup.sg/chatbot/chat\", { textInput: request.msg.text.text, sessionId: this.props.botmsg[0].sessionId }, config);\n      this.setState({ loading: false });\n      if (response.data.text) {\n        says = {\n          speaks: \"bot\",\n          text: response.data.text\n        }\n        return this.setState({ messages: [...this.state.messages, says] })\n      }\n\n      for (let msg of response.data) {\n        says = {\n          speaks: \"bot\",\n          msg: msg\n        };\n        this.setState({ messages: [...this.state.messages, says] });\n      }  \n    } catch (e) {\n      if (e.response.status === 401 || e.response.status === 406) {\n        let says = {\n          speaks: 'bot',\n          msg: {\n            text: {\n              text: \"Your session has expired. Please refresh your browser to start the chat session again.\"\n            }\n          }\n        }\n        this.setState({ messages: [...this.state.messages, says] });\n        let that = this;\n        setTimeout(function () {\n          that.setState({ showBot: false })\n        }, 2000);\n      }\n      else {\n        let says = {\n          speaks: 'bot',\n          msg: {\n            text: {\n              text: \"Your session has expired. Please refresh your browser to start the chat session again.\"\n            }\n          }\n        }\n        this.setState({ messages: [...this.state.messages, says] });\n        let that = this;\n        setTimeout(function () {\n          that.setState({ showBot: false })\n        }, 2000);\n      }\n    }\n  }\n   renderMessages() {\n    if (this.props.botmsg) {\n      return this.props.botmsg.map((message, uuidv4) => {\n        return this.renderOneMessage(message, uuidv4);\n      });\n    } else {\n      return null;\n    }\n  }\n   _handleInputKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.df_text_query(e.target.value);\n      this.setState({ loading: true });\n      e.target.value = '';\n    }\n  }\n \n   renderMessagesText(stateMessage) {\n    if (stateMessage) {\n      return stateMessage.map((message, uuidv4) => {\n        return this.renderOneMessage(message, uuidv4);\n      });\n    }\n    else {\n      return null\n    }\n  }\n   renderOneMessage(message, i) {\n    if (message.speaks && message.msg && message.msg.buttons && message.msg.title && message.msg.imageUri && message.msg.subtitle) {\n      return (<Card payload={message.msg} replyClick={this._handleQuickReplyPayload} speaks={message.speaks} />)\n    }\n    else if (message.msg && message.msg.text && message.msg.text.text) {\n      return <Message key={i} speaks={message.speaks} text={message.msg.text.text} />\n    }\n    else if (message.text) {\n      return <Message key={i} speaks={message.speaks} text={message.text} />\n    }\n    else if (message.msg && message.msg.buttons && message.msg.title) {\n      return <QuickReplies\n        title={message.msg.title}\n        key={i}\n        payload={message.msg.buttons}\n        replyClick={this._handleQuickReplyPayload}\n        speaks={message.speaks} />\n    }\n    else if (message.msg\n      && message.msg.quickReplies\n      && message.msg.title) {\n      return <QuickReplies\n        title={message.msg.title}\n        key={i}\n        payload={message.msg.quickReplies}\n        replyClick={this._handleQuickReplyPayload}\n        speaks={message.speaks} />\n    }\n  }\n   show(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.setState({ showBot: true });\n  }\n   hide(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.setState({ showBot: false, showPopUp: false });\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchEventQueryStart: () => dispatch(fetchEventQueryStart())\n})\nconst mapStateToProps = (state) => ({\n  botmsg: state.messages,\n  botmsg2: state.messages,\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chatbot);\n","import { EventType } from '../../constants/src/event-type';\n\n\n\nconst initialState = {\n    messages: [],\n    isFetching: false,\n    error: null\n}\nconst reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case EventType.FetchEventStart:\n            return {\n                ...state,\n                isFetching: true\n            }\n        case EventType.FetchEventSuccess: {\n\n            return {\n                ...state,\n                isFetching: false,\n\n                messages: [...state.messages, action.payload],\n                error: null\n            }\n        }\n        case EventType.FetchEventFailure: {\n            return {\n                ...state,\n                isFetching: false,\n                error: action.payload\n            }\n        }\n        default: return state;\n    }\n\n}\n\nexport default reducer;","import { fork, take, call, put } from 'redux-saga/effects';\nimport { EventType } from './constants/src/event-type';\nimport axios from 'axios';\nimport { fetchEventQuerySucess, fetchEventQueryFailure } from './action/eventAction';\n\n\nexport function* fetchEventAsync(payload) {\n\n\n    const token =\n        \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1NjkzMDU2MDAsInJvbGVzIjpbIlJPTEVfVVNFUiIsIlJPTEVfU1VQRVJfQURNSU4iXSwidXNlcm5hbWUiOiJTdXBlckFkbWluIiwiZXhwIjoxODg0OTI0ODAwLCJzdWIiOiIxIiwidHdvRmFjdG9yQXV0aGVudGljYXRpb25TdGF0dXMiOm51bGx9.aWv6r0CLHQ9qVJlad2XRpxFM69p8cWl5QftQMRqwTtl92sAMaXikbYcs1xS5vbEM5TuupTa87SttvibNTSKinPC_nUu25J4LMuou8HIWH2i8cje-TPQsLjQ68RltF3GCeHBsBu7G6w7IBBar5zAtp8hAuuTs2uE3Orm3z_Sq4i7_C3SNtRldCkkLgAyJy31oKhUtBsxDxBejN2lSIHevufR9qleQ3k7DflI731c8f7JbbeVsT8f2t3oQthyz7a2PU-wOu_5UiA7bejB73eUJv_hLHXPeVMW8vrmWcL6uqaOl1Q8mmhwkzgo1FjeQ6BPXiddXG0yg9dUC6wllG892x13WcT0JhVosa-0g9oVSjyVJttshV0z7e_B0SPlHE0US6fQ_q9hwiiEy9iKAw1bzUGTYTv_9kofHnB2Z48AacrcI7ukXnCYuHsuroVUmbeJz6FhlUkEOMVwI6ekLzE1FG7gSB15YTRN44rXFXQ0rKJCCeJNs-pqphFnisDJvMCsFNKyezhZHQQy_l-dR5mCKOIOMpaSeiu7wUE1fMNDqdcod6NFbFFzsdnCRwxo2Kux9l0etKWHQg8D0vV4gTE18auf3MMEnQg8ljomPdY8m77aZvOz-UI6k9H6K3P-B44xTkksK_duJl7XgeGMydgeDNKh7hMkrFYE12IemJyUIipw\";\n    const bodyParameters = {\n        eventInput: \"assignSessionId\",\n\n    };\n\n    const config = {\n        headers: { Authorization: `Bearer ${token}` }\n    };\n\n    try {\n        const response = yield axios\n            .post(\n                \"https://api.test.ucentric.sisgroup.sg/chatbot/event\",\n                bodyParameters,\n\n                config\n            );\n\n\n        for (let msg of response.data.result) {\n\n            let says = {\n                speaks: \"bot\",\n                sessionId: response.data.sessionId,\n                msg: msg\n            };\n            yield put(fetchEventQuerySucess(says));\n\n\n        }\n\n    }\n    catch (error) {\n        yield put(fetchEventQueryFailure(error));\n    }\n\n\n\n}\n\nexport function* fetchEventQuery() {\n    while (true) {\n        const { payload } = yield take(EventType.FetchEventStart);\n\n        yield call(fetchEventAsync, payload)\n    }\n\n\n}\n\nexport default function* () {\n\n    yield fork(fetchEventQuery);\n\n}\n\n\n\n","import { all, call } from 'redux-saga/effects';\nimport { fetchEventQuery } from './saga';\n\nexport default function* rootSaga() {\n\n    yield all([\n        call(fetchEventQuery)\n    ]);\n}","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport logger from 'redux-logger';\nimport reducer from './reducer/event-reducer/index'\nimport rootSaga from './root-saga';\n//import { StateType } from 'typesafe-actions';\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [logger, sagaMiddleware];\n\n//export type RootState = StateType<typeof reducer>;\n\nconst store = createStore(reducer, applyMiddleware(...middleware));\n\nsagaMiddleware.run(rootSaga);\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport Chatbot from './Chatbot';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nconst rootEl = document.getElementById('chatbot');\nconsole.log(\"Chatbot is running\");\nReactDOM.render(<Provider store={store}><Chatbot /></Provider>, rootEl);\nserviceWorker.unregister();\n"],"sourceRoot":""}